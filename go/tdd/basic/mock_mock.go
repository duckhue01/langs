// Code generated by MockGen. DO NOT EDIT.
// Source: mock.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSleeper is a mock of Sleeper interface.
type MockSleeper struct {
	ctrl     *gomock.Controller
	recorder *MockSleeperMockRecorder
}

// MockSleeperMockRecorder is the mock recorder for MockSleeper.
type MockSleeperMockRecorder struct {
	mock *MockSleeper
}

// NewMockSleeper creates a new mock instance.
func NewMockSleeper(ctrl *gomock.Controller) *MockSleeper {
	mock := &MockSleeper{ctrl: ctrl}
	mock.recorder = &MockSleeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSleeper) EXPECT() *MockSleeperMockRecorder {
	return m.recorder
}

// Sleep mocks base method.
func (m *MockSleeper) Sleep() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Sleep")
}

// Sleep indicates an expected call of Sleep.
func (mr *MockSleeperMockRecorder) Sleep() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sleep", reflect.TypeOf((*MockSleeper)(nil).Sleep))
}
