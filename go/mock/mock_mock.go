// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStub is a mock of Stub interface.
type MockStub struct {
	ctrl     *gomock.Controller
	recorder *MockStubMockRecorder
}

// MockStubMockRecorder is the mock recorder for MockStub.
type MockStubMockRecorder struct {
	mock *MockStub
}

// NewMockStub creates a new mock instance.
func NewMockStub(ctrl *gomock.Controller) *MockStub {
	mock := &MockStub{ctrl: ctrl}
	mock.recorder = &MockStubMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStub) EXPECT() *MockStubMockRecorder {
	return m.recorder
}

// toString mocks base method.
func (m *MockStub) toString() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "toString")
	ret0, _ := ret[0].(string)
	return ret0
}

// toString indicates an expected call of toString.
func (mr *MockStubMockRecorder) toString() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "toString", reflect.TypeOf((*MockStub)(nil).toString))
}
